def verificar_senha_forte(senha):
    """
    Verifica se uma senha atende aos crit√©rios de for√ßa.
    
    Args:
        senha (str): A senha a ser verificada
        
    Returns:
        tuple: (bool, list) - (√©_forte, lista_de_problemas)
    """
    problemas = []
    
    # Verificar comprimento m√≠nimo
    if len(senha) < 8:
        problemas.append("deve ter pelo menos 8 caracteres")
    
    # Verificar se cont√©m pelo menos um n√∫mero
    tem_numero = any(char.isdigit() for char in senha)
    if not tem_numero:
        problemas.append("deve conter pelo menos um n√∫mero")
    
    return len(problemas) == 0, problemas

def obter_senha():
    """
    Solicita uma senha do usu√°rio com tratamento de entrada vazia.
    
    Returns:
        str: A senha digitada pelo usu√°rio
    """
    while True:
        try:
            senha = input("Digite uma senha (ou 'sair' para encerrar): ").strip()
            if senha == "":
                print("‚ö†Ô∏è  Por favor, digite uma senha v√°lida.")
                continue
            return senha
        except KeyboardInterrupt:
            print("\n\nüëã Programa encerrado pelo usu√°rio.")
            return 'sair'
        except Exception as e:
            print(f"‚ùå Erro inesperado: {e}")
            continue

def exibir_resultado(senha, eh_forte, problemas):
    """
    Exibe o resultado da verifica√ß√£o da senha.
    
    Args:
        senha (str): A senha verificada
        eh_forte (bool): Se a senha √© forte
        problemas (list): Lista de problemas encontrados
    """
    print(f"\n{'='*50}")
    print(f"Senha analisada: {'*' * len(senha)}")
    
    if eh_forte:
        print("‚úÖ SENHA FORTE! Atende a todos os crit√©rios de seguran√ßa.")
        print("üîí Sua senha est√° protegida.")
    else:
        print("‚ùå SENHA FRACA! Problemas encontrados:")
        for i, problema in enumerate(problemas, 1):
            print(f"   {i}. A senha {problema}")
        print("\nüí° Dica: Use uma combina√ß√£o de letras, n√∫meros e s√≠mbolos.")
    
    print(f"{'='*50}\n")

def main():
    """
    Fun√ß√£o principal do programa.
    """
    print("üîê VERIFICADOR DE SENHA FORTE")
    print("="*50)
    print("Crit√©rios para senha forte:")
    print("‚Ä¢ Pelo menos 8 caracteres")
    print("‚Ä¢ Pelo menos um n√∫mero")
    print("‚Ä¢ Digite 'sair' para encerrar")
    print("="*50)
    
    tentativas = 0
    
    while True:
        try:
            tentativas += 1
            print(f"\n--- Tentativa {tentativas} ---")
            
            senha = obter_senha()
            
            # Verificar se o usu√°rio quer sair
            if senha.lower() == 'sair':
                print("üëã Obrigado por usar o verificador de senhas!")
                break
            
            # Verificar a for√ßa da senha
            eh_forte, problemas = verificar_senha_forte(senha)
            
            # Exibir resultado
            exibir_resultado(senha, eh_forte, problemas)
            
            # Se a senha √© forte, encerrar o programa
            if eh_forte:
                print("üéâ Parab√©ns! Senha aceita com sucesso.")
                break
            else:
                print("üîÑ Tente novamente com uma senha mais forte.")
                
        except KeyboardInterrupt:
            print("\n\nüëã Programa encerrado pelo usu√°rio.")
            break
        except Exception as e:
            print(f"‚ùå Erro inesperado: {e}")
            print("üîÑ Tentando novamente...")
            continue
    
    print(f"\nüìä Total de tentativas: {tentativas}")
    print("üîê Lembre-se: senhas fortes protegem seus dados!")

if __name__ == "__main__":
    main()
